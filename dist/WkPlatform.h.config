#ifndef WKPLATFORM_HH
#define WKPLATFORM_HH

/* *
 *  Copyright (c) 2009, Asmodehn's Corp.
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without 
 *  modification, are permitted provided that the following conditions are met:
 *  
 *      - Redistributions of source code must retain the above copyright notice, 
 * 	    this list of conditions and the following disclaimer.
 *      - Redistributions in binary form must reproduce the above copyright
 * 		notice, this list of conditions and the following disclaimer in the 
 * 	    documentation and/or other materials provided with the distribution.
 *      - either the name of the Asmodehn's Corp. nor the names of its 
 * 	    contributors may be used to endorse or promote products derived
 * 	    from this software without specific prior written permission.
 *  
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 *  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 *  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 *  THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

/*Platform type detection */
#if defined (__MINGW32__) || defined (_MSC_VER)
	#define WK_PLATFORM_WIN32
#elif defined (_POSIX_SOURCE) || defined (_POSIX_C_SOURCE)
	#define WK_PLATFORM_POSIX
#endif

/*adjusting declspec values*/

/* Generic helper definitions for shared library support */
#if defined _WIN32 || defined __CYGWIN__ || defined(__MINGW32__) || defined(_MSC_VER)
  #define WK_HELPER_DLL_IMPORT __declspec(dllimport)
  #define WK_HELPER_DLL_EXPORT __declspec(dllexport)
  #define WK_HELPER_DLL_LOCAL
#else
  #if __GNUC__ >= 4
    #define WK_HELPER_DLL_IMPORT __attribute__ ((visibility("default")))
    #define WK_HELPER_DLL_EXPORT __attribute__ ((visibility("default")))
    #define WK_HELPER_DLL_LOCAL  __attribute__ ((visibility("hidden")))
  #else
    #define WK_HELPER_DLL_IMPORT
    #define WK_HELPER_DLL_EXPORT
    #define WK_HELPER_DLL_LOCAL
  #endif
#endif



/*
 Now we use the generic helper definitions above to define WK_API and WK_LOCAL.
 WK_API is used for the public API symbols. It either DLL imports or DLL exports (or does nothing for static build)
 WK_LOCAL is used for non-api symbols.
*/

#ifdef WK_SHAREDLIB_BUILD /* defined if The library is compiled as a DLL */
  #ifdef WK_SHAREDLIB_IMPORT /* defined if we import the library (instead of building it) */
    #define WK_API WK_HELPER_DLL_IMPORT
  #else
    #define WK_API WK_HELPER_DLL_EXPORT
  #endif /* WK_SHAREDLIB_IMPORT */
  #define WK_LOCAL WK_HELPER_DLL_LOCAL
#else /* WK_SHAREDLIB_BUILD is not defined: this means the library is a static lib. */
  #define WK_API
  #define WK_LOCAL
#endif /* WK_SHAREDLIB_BUILD */

/* For backward compatibility */
#define WK_DECLSPEC WK_API

#ifndef NULL
#define NULL 0
#endif

/* Dependency detection, Important to propagate build configuration of libraries... */
/* NB : This must be in sync with WkUtiles.cmake macros and variables naming conventions... */
#cmakedefine WK_SDLIMAGE_FOUND
#cmakedefine WK_SDLMIXER_FOUND
#cmakedefine WK_SDLTTF_FOUND
#cmakedefine WK_SDLNET_FOUND
#cmakedefine WK_OPENGL_FOUND
#cmakedefine WK_GUICHAN_FOUND




#endif /* WKPLATFORM_HH */
